---
- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: Create resolv.conf
  copy:
    dest: "/etc/resolv.conf"
    content: |
      nameserver 8.8.8.8
      nameserver 8.8.4.4

- name: Create resolv.upstream.conf
  copy:
    dest: "/etc/resolv.upstream.conf"
    content: |
      nameserver 8.8.8.8
      nameserver 8.8.4.4

- name: Remove rescue images
  file: path={{ item }} state=absent
  with_fileglob: /boot/*rescue*

- name: Configure console
  copy:
    dest: /etc/vconsole.conf
    content: |
      KEYMAP="{{ console_keymap }}"
      FONT="{{ console_font }}"

- name: Configure locale
  copy:
    dest: /etc/locale.conf
    content: |
      LANG="{{ system_locale }}"

- name: Set timezone
  timezone: name="{{ system_timezone }}"

- name: Remove unhelpful packages
  package: name={{ item }} state=absent
  with_items:
    - "abrt*"
  ignore_errors: true

- name: Create go bin path
  file:
    path: /root/go/bin
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Change root shell
  user: name=root shell={{ root_shell }}

- name: Cleaning up
  file: path={{ item }} state=absent
  with_items:
    - /root/.cache
    - /root/.lesshst
    - /root/.rnd
    - /root/anaconda-ks.cfg
    - /root/setup.retry
    - /var/tmp/abrt

- name: Check if platform is Virtual
  lineinfile:
    dest: /sys/devices/virtual/dmi/id/sys_vendor
    line: "QEMU"
  check_mode: yes
  register: virtual
  failed_when: (virtual is changed) or (virtual is failed)
  ignore_errors: true

- name: Check if platform is Physical
  set_fact:
    physical: true
    virtual: false
  when: virtual is changed

- name: Set fact for Virtual
  set_fact:
    physical: false
    virtual: true
  when: virtual

- name: Get system Chassis
  shell: hostnamectl status | grep Chassis | cut -f2 -d ":" | tr -d ' '
  register: chassis

- name: Workaround Proliant
  lineinfile:
    dest: /sys/devices/virtual/dmi/id/product_name
    line: "ProLiant"
  check_mode: yes
  register: proliant
  failed_when: (proliant is changed) or (proliant is failed)
  ignore_errors: true

- name: Set Server facts
  set_fact:
    physical: true
    virtual: false
    chassis: "server"
  when: proliant
  
- name: Configure systemd for ignoring closed lid on power
  ini_file:
    path: /etc/systemd/logind.conf
    section: Login
    option: HandleLidSwitchExternalPower
    value: ignore
  when: physical and chassis == 'laptop'

- name: Configure systemd for ignoring closed lid on Docked
  ini_file:
    path: /etc/systemd/logind.conf
    section: Login
    option: HandleLidSwitchDocked
    value: ignore
  when: physical and chassis == 'laptop'

- name: Configure User environment
  lineinfile:
    dest: /root/.bashrc
    create: true
    state: present
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^export GOPATH", line: "export GOPATH=~/go" }
    - { regexp: "^export PATH.*", line: "export PATH=$PATH:$GOPATH/bin:/root/bin" }
    - {
        regexp: "^export PS1=",
        line: 'export PS1="\[\e[0;35m\]\u:\[\e[0;35m\]\h \[\e[0;35m\]\[\e[0;32m\]: \w \[\e[1;31m\] \n\[\e[0;35m\]\$ \[\e[0m\]"',
      }

- name: Limit Journal file size
  ini_file:
    path: /etc/systemd/journald.conf
    section: Journal
    option: SystemMaxUse
    value: "{{ journalSystemMaxUse | default('500M') }}"

- name: Update root user password
  user:
    name: root
    password: "{{ rootpassword }}"
    append: yes
  when: updaterootpwd==True
